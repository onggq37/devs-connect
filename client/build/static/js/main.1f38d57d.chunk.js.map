{"version":3,"sources":["actions/types.js","actions/alert.js","utils/setAuthToken.js","actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/layout/Alert.js","actions/profile.js","components/dashboard/DashboardActions.js","utils/formatDate.js","components/dashboard/Experience.js","components/dashboard/Education.js","components/dashboard/Dashboard.js","components/routing/PrivateRoute.js","components/profile-forms/CreateProfile.js","components/profile-forms/EditProfile.js","components/profile-forms/AddExperience.js","components/profile-forms/AddEducation.js","components/layout/spinner.gif","components/layout/Spinner.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileExperience.js","components/profile/ProfileEducation.js","components/profile/ProfileGithub.js","components/profile/Profile.js","components/posts/PostItem.js","actions/post.js","components/posts/PostForm.js","components/posts/Posts.js","components/post/CommentForm.js","components/post/CommentItem.js","components/post/Post.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","store.js","App.js","reportWebVitals.js","index.js"],"names":["SET_ALERT","REMOVE_ALERT","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","GET_PROFILE","GET_PROFILES","GET_REPOS","PROFILE_ERROR","CLEAR_PROFILE","UPDATE_PROFILE","ACCOUNT_DELETED","GET_POST","GET_POSTS","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","ADD_COMMENT","REMOVE_COMMENT","setAlert","msg","alertType","timeout","dispatch","id","uuid","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","data","connect","state","auth","logout","isAuthenticated","loading","authLinks","to","className","onClick","guestLinks","console","log","register","name","email","password","config","body","JSON","stringify","post","errors","response","forEach","error","useState","password2","formData","setFormData","setFormHandler","e","prevState","target","value","formSubmitHandler","preventDefault","onSubmit","placeholder","onChange","required","minLength","login","alerts","alert","length","map","getCurrentProfile","statusText","status","createProfile","history","edit","push","DashboardActions","formatDate","date","Intl","DateTimeFormat","format","Date","deleteExperience","delete","experience","experiences","exp","company","title","from","_id","deleteEducation","education","educations","edu","school","degree","profile","deleteAccount","window","confirm","user","useEffect","Component","component","rest","render","props","withRouter","website","location","bio","githubusername","skills","youtube","facebook","twitter","instagram","linkedin","displaySocialInputs","toggleSocialInputs","setFormDataHandler","initialState","profileData","key","social","Array","isArray","join","addExperience","put","current","description","checked","disabled","cols","rows","addEducation","fieldofstudy","Spinner","src","spinner","style","width","margin","display","alt","ProfileItem","avatar","slice","skill","index","getProfiles","profiles","ProfileTop","href","rel","Object","entries","filter","ProfileAbout","ProfileExperience","ProfileEducation","repos","getGithubRepos","username","repo","html_url","stargazers_count","watchers_count","forks_count","getProfileById","userId","useParams","class","PostItem","addLike","removeLike","deletePost","text","likes","comments","showActions","defaultProps","addPost","setText","getPosts","posts","addComment","postId","deleteComment","commentId","comment","getPost","alertReducer","action","getItem","authReducer","setItem","removeItem","profileReducer","postReducer","combineReducers","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","path","Landing","exact","Register","Login","Profiles","Profile","Dashboard","CreateProfile","EditProfile","AddExperience","AddEducation","Posts","Post","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f38d57d.chunk.js","sourcesContent":["export const SET_ALERT = \"SET_ALERT\";\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\nexport const GET_PROFILE = \"GET_PROFILE\";\nexport const GET_PROFILES = \"GET_PROFILES\";\nexport const GET_REPOS = \"GET_REPOS\";\nexport const PROFILE_ERROR = \"PROFILE_ERROR\";\nexport const CLEAR_PROFILE = \"CLEAR_PROFILE\";\nexport const UPDATE_PROFILE = \"UPDATE_PROFILE\";\nexport const ACCOUNT_DELETED = \"ACCOUNT_DELETED\";\nexport const GET_POST = \"GET_POST\";\nexport const GET_POSTS = \"GET_POSTS\";\nexport const POST_ERROR = \"POST_ERROR\";\nexport const UPDATE_LIKES = \"UPDATE_LIKES\";\nexport const DELETE_POST = \"DELETE_POST\";\nexport const ADD_POST = \"ADD_POST\";\nexport const ADD_COMMENT = \"ADD_COMMENT\";\nexport const REMOVE_COMMENT = \"REMOVE_COMMENT\";\n","import { v4 as uuid } from \"uuid\";\nimport { SET_ALERT, REMOVE_ALERT } from \"./types\";\n\nexport const setAlert =\n  (msg, alertType, timeout = 5000) =>\n  (dispatch) => {\n    const id = uuid(); //give us random long string\n\n    dispatch({\n      type: SET_ALERT,\n      payload: { msg, alertType, id },\n    });\n\n    setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\n  };\n","import axios from \"axios\";\n\nconst setAuthToken = (token) => {\n  if (token) {\n    axios.defaults.headers.common[\"x-auth-token\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"x-auth-token\"];\n  }\n};\n\nexport default setAuthToken;\n","import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_PROFILE,\n} from \"./types\";\nimport setAuthToken from \"../utils/setAuthToken\";\n\n//Load User\nexport const loadUser = () => async (dispatch) => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get(\"/api/auth\");\n\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR,\n    });\n  }\n};\n\n//Register User\nexport const register =\n  ({ name, email, password }) =>\n  async (dispatch) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const body = JSON.stringify({ name, email, password });\n\n    try {\n      const res = await axios.post(\"/api/users\", body, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data,\n      });\n\n      dispatch(loadUser());\n    } catch (err) {\n      const errors = err.response.data.errors;\n      //Loop through list of errors and dispatch them\n      if (errors) {\n        errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n      }\n\n      dispatch({\n        type: REGISTER_FAIL,\n      });\n    }\n  };\n\n//Login User\nexport const login =\n  ({ email, password }) =>\n  async (dispatch) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const body = JSON.stringify({ email, password });\n\n    try {\n      const res = await axios.post(\"/api/auth\", body, config);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data,\n      });\n\n      dispatch(loadUser());\n    } catch (err) {\n      const errors = err.response.data.errors;\n      //Loop through list of errors and dispatch them\n      if (errors) {\n        errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n      }\n\n      dispatch({\n        type: LOGIN_FAIL,\n      });\n    }\n  };\n\n//Logout and Clear profile\nexport const logout = () => (dispatch) => {\n  dispatch({ type: CLEAR_PROFILE });\n  dispatch({ type: LOGOUT });\n};\n","import { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { logout } from \"../../actions/auth\";\n\nconst Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\n  const authLinks = (\n    <ul>\n      <li>\n        <Link to='/profiles'>Developers</Link>\n      </li>\n      <li>\n        <Link to='/posts'>Posts</Link>\n      </li>\n      <li>\n        <Link to='/dashboard'>\n          <i className='fas fa-user'></i> Dashboard\n        </Link>\n      </li>\n      <li>\n        <Link onClick={logout} to='#!'>\n          <i className='fas fa-sign-out-alt'></i> Logout\n        </Link>\n      </li>\n    </ul>\n  );\n\n  const guestLinks = (\n    <ul>\n      <li>\n        <Link to='/profiles'>Developers</Link>\n      </li>\n      <li>\n        <Link to='/register'>Register</Link>\n      </li>\n      <li>\n        <Link to='/login'>Login</Link>\n      </li>\n    </ul>\n  );\n\n  return (\n    <nav className='navbar bg-dark'>\n      <h1>\n        <Link to='/'>\n          <i className='fas fa-code'></i> Devs-Connect\n        </Link>\n      </h1>\n      {!loading && (\n        <Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>\n      )}\n    </nav>\n  );\n};\n\nNavbar.propTypes = {\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { logout })(Navbar);\n","import { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst Landing = ({ isAuthenticated }) => {\n  console.log(isAuthenticated);\n  if (isAuthenticated) {\n    return <Redirect to='/dashboard' />;\n  }\n\n  return (\n    <section className='landing'>\n      <div className='dark-overlay'>\n        <div className='landing-inner'>\n          <h1 className='x-large'>Devs-Connect</h1>\n          <p className='lead'>\n            Create a developer profile/portfolio, share posts and get help from\n            other developers\n          </p>\n          <div className='buttons'>\n            <Link to='/register' className='btn btn-primary'>\n              Sign Up\n            </Link>\n            <Link to='/login' className='btn btn-light'>\n              Login\n            </Link>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nLanding.propTypes = {\n  isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setAlert } from \"../../actions/alert\";\nimport { register } from \"../../actions/auth\";\nimport PropTypes from \"prop-types\";\n\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n  });\n\n  const { name, email, password, password2 } = formData;\n\n  const setFormHandler = (e) => {\n    setFormData((prevState) => {\n      return { ...prevState, [e.target.name]: e.target.value };\n    });\n  };\n\n  const formSubmitHandler = async (e) => {\n    e.preventDefault();\n    if (password !== password2) {\n      setAlert(\"Password do no match\", \"danger\");\n    } else {\n      register({ name, email, password });\n    }\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to='/dashboard' />;\n  }\n\n  return (\n    <>\n      <h1 className='large text-primary'>Sign Up</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i> Create Your Account\n      </p>\n      <form className='form' onSubmit={formSubmitHandler}>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Name'\n            name='name'\n            value={name}\n            onChange={setFormHandler}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='email'\n            placeholder='Email Address'\n            name='email'\n            value={email}\n            onChange={setFormHandler}\n            required\n          />\n          <small className='form-text'>\n            This site uses Gravatar so if you want a profile image, use a\n            Gravatar email\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='password'\n            placeholder='Password'\n            name='password'\n            minLength='6'\n            value={password}\n            onChange={setFormHandler}\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='password'\n            placeholder='Confirm Password'\n            name='password2'\n            minLength='6'\n            value={password2}\n            onChange={setFormHandler}\n          />\n        </div>\n        <input type='submit' className='btn btn-primary' value='Register' />\n      </form>\n      <p className='my-1'>\n        Already have an account? <Link to='/login'>Sign In</Link>\n      </p>\n    </>\n  );\n};\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\n//connect 2nd parameter (mapDispatchToProps) give actions creator dispatch functionality\nexport default connect(mapStateToProps, { setAlert, register })(Register);\n","import { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { login } from \"../../actions/auth\";\n\nconst Login = ({ login, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const { email, password } = formData;\n\n  const setFormHandler = (e) => {\n    setFormData((prevState) => {\n      return { ...prevState, [e.target.name]: e.target.value };\n    });\n  };\n\n  const formSubmitHandler = async (e) => {\n    e.preventDefault();\n    login({ email, password });\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to='/dashboard' />;\n  }\n\n  return (\n    <>\n      <h1 className='large text-primary'>Sign In</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i> Sign into Your Account\n      </p>\n      <form className='form' onSubmit={formSubmitHandler}>\n        <div className='form-group'>\n          <input\n            type='email'\n            placeholder='Email Address'\n            name='email'\n            value={email}\n            onChange={setFormHandler}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='password'\n            placeholder='Password'\n            name='password'\n            minLength='6'\n            value={password}\n            onChange={setFormHandler}\n          />\n        </div>\n        <input type='submit' className='btn btn-primary' value='Login' />\n      </form>\n      <p className='my-1'>\n        Don't have an account? <Link to='/register'>Sign Up</Link>\n      </p>\n    </>\n  );\n};\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","import PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\n//Check if there are elements in alert state props, if it does create div with alert parameters\nconst Alert = ({ alerts }) =>\n  alert !== null &&\n  alerts.length > 0 &&\n  alerts.map((alert) => (\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n      {alert.msg}\n    </div>\n  ));\n\nAlert.propTypes = {\n  alerts: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  //get alert state from reducer\n  alerts: state.alert,\n});\n\n//connect subscribe component to store\nexport default connect(mapStateToProps)(Alert);\n","import axios from \"axios\";\nimport { setAlert } from \"./alert\";\n\nimport {\n  GET_PROFILE,\n  GET_PROFILES,\n  GET_REPOS,\n  PROFILE_ERROR,\n  UPDATE_PROFILE,\n  CLEAR_PROFILE,\n  ACCOUNT_DELETED,\n} from \"./types\";\n\n//Get current user profile\nexport const getCurrentProfile = () => async (dispatch) => {\n  try {\n    const res = await axios.get(\"/api/profile/me\");\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//Get all profile\nexport const getProfiles = () => async (dispatch) => {\n  try {\n    const res = await axios.get(\"/api/profile\");\n\n    //dispatch({ type: CLEAR_PROFILE });\n\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//Get profile by id\nexport const getProfileById = (userId) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/profile/user/${userId}`);\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\nexport const getGithubRepos = (username) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/profile/github/${username}`);\n\n    console.log(res);\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//Create or update profile\nexport const createProfile =\n  (formData, history, edit = false) =>\n  async (dispatch) => {\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      };\n\n      const res = await axios.post(\"/api/profile\", formData, config);\n\n      dispatch({\n        type: GET_PROFILE,\n        payload: res.data,\n      });\n\n      dispatch(\n        setAlert(edit ? \"Profile Updated\" : \"Profile Created\", \"success\")\n      );\n\n      if (!edit) {\n        history.push(\"/dashboard\");\n      }\n    } catch (err) {\n      const errors = err.response.data.errors;\n      //Loop through list of errors and dispatch them\n      if (errors) {\n        errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n      }\n\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status },\n      });\n    }\n  };\n\n//Add Experience\nexport const addExperience = (formData, history) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const res = await axios.put(\"/api/profile/experience\", formData, config);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert(\"Experience Added\", \"success\"));\n\n    history.push(\"/dashboard\");\n  } catch (err) {\n    const errors = err.response.data.errors;\n    //Loop through list of errors and dispatch them\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//Add Education\nexport const addEducation = (formData, history) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n\n    const res = await axios.put(\"/api/profile/education\", formData, config);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert(\"Education Added\", \"success\"));\n\n    history.push(\"/dashboard\");\n  } catch (err) {\n    const errors = err.response.data.errors;\n    //Loop through list of errors and dispatch them\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, \"danger\")));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//Delete experience\n// Delete experience\nexport const deleteExperience = (id) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`api/profile/experience/${id}`);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert(\"Experience Removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Delete education\nexport const deleteEducation = (id) => async (dispatch) => {\n  try {\n    const res = await axios.delete(`api/profile/education/${id}`);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert(\"Education Removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//delete Account and Profile\nexport const deleteAccount = () => async (dispatch) => {\n  if (window.confirm(\"Are you sure? This can NOT be undone!\")) {\n    try {\n      await axios.delete(\"api/profile\");\n\n      dispatch({ type: CLEAR_PROFILE });\n      dispatch({ type: ACCOUNT_DELETED });\n\n      dispatch(setAlert(\"Your account has been permanently deleted\"));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status },\n      });\n    }\n  }\n};\n","import { Link } from \"react-router-dom\";\n\nconst DashboardActions = () => {\n  return (\n    <div className='dash-buttons'>\n      <Link to='/edit-profile' className='btn btn-light'>\n        <i className='fas fa-user-circle text-primary'></i> Edit Profile\n      </Link>\n      <Link to='/add-experience' className='btn btn-light'>\n        <i className='fab fa-black-tie text-primary'></i> Add Experience\n      </Link>\n      <Link to='/add-education' className='btn btn-light'>\n        <i className='fas fa-graduation-cap text-primary'></i> Add Education\n      </Link>\n    </div>\n  );\n};\n\nexport default DashboardActions;\n","function formatDate(date) {\n  return new Intl.DateTimeFormat().format(new Date(date));\n}\n\nexport default formatDate;\n","import { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport formatDate from \"../../utils/formatDate\";\nimport { deleteExperience } from \"../../actions/profile\";\n\nconst Experience = ({ experience, deleteExperience }) => {\n  const experiences = experience.map((exp) => (\n    <tr key={exp._id}>\n      <td>{exp.company}</td>\n      <td>{exp.title}</td>\n      <td>\n        {formatDate(exp.from)} - {exp.to ? formatDate(exp.to) : \"Now\"}\n      </td>\n      <td>\n        <button\n          onClick={() => deleteExperience(exp._id)}\n          className='btn btn-danger'\n        >\n          Delete\n        </button>\n      </td>\n    </tr>\n  ));\n\n  return (\n    <Fragment>\n      <h2 className='my-2'>Experience Credentials</h2>\n      <table className='table'>\n        <thead>\n          <tr>\n            <th>Company</th>\n            <th>Title</th>\n            <th>Years</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>{experiences}</tbody>\n      </table>\n    </Fragment>\n  );\n};\n\nExperience.propTypes = {\n  experience: PropTypes.array.isRequired,\n  deleteExperience: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteExperience })(Experience);\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteEducation } from \"../../actions/profile\";\nimport formatDate from \"../../utils/formatDate\";\n\nconst Education = ({ education, deleteEducation }) => {\n  const educations = education.map((edu) => (\n    <tr key={edu._id}>\n      <td>{edu.school}</td>\n      <td>{edu.degree}</td>\n      <td>\n        {formatDate(edu.from)} - {edu.to ? formatDate(edu.to) : \"Now\"}\n      </td>\n      <td>\n        <button\n          onClick={() => deleteEducation(edu._id)}\n          className='btn btn-danger'\n        >\n          Delete\n        </button>\n      </td>\n    </tr>\n  ));\n\n  return (\n    <Fragment>\n      <h2 className='my-2'>Education Credentials</h2>\n      <table className='table'>\n        <thead>\n          <tr>\n            <th>School</th>\n            <th>Degree</th>\n            <th>Years</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>{educations}</tbody>\n      </table>\n    </Fragment>\n  );\n};\n\nEducation.propTypes = {\n  education: PropTypes.array.isRequired,\n  deleteEducation: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteEducation })(Education);\n","import { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getCurrentProfile, deleteAccount } from \"../../actions/profile\";\nimport { Link } from \"react-router-dom\";\nimport DashboardActions from \"./DashboardActions\";\nimport Experience from \"./Experience\";\nimport Education from \"./Education\";\n\nconst Dashboard = ({\n  getCurrentProfile,\n  deleteAccount,\n  auth: { user },\n  profile: { profile },\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, [getCurrentProfile]);\n\n  return (\n    <section className='container'>\n      <h1 className='large text-primary'>Dashboard</h1>\n      <p className='lead'>\n        <i className='fas fa-user' /> Welcome {user && user.name}\n      </p>\n      {profile !== null ? (\n        <>\n          <DashboardActions />\n          <Experience experience={profile.experience} />\n          <Education education={profile.education} />\n\n          <div className='my-2'>\n            <button className='btn btn-danger' onClick={() => deleteAccount()}>\n              <i className='fas fa-user-minus' /> Delete My Account\n            </button>\n          </div>\n        </>\n      ) : (\n        <>\n          <p>You have not yet setup a profile, please add some info</p>\n          <Link to='/create-profile' className='btn btn-primary my-1'>\n            Create Profile\n          </Link>\n        </>\n      )}\n    </section>\n  );\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(\n  Dashboard\n);\n","import PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst PrivateRoute = ({\n  component: Component,\n  auth: { isAuthenticated, loading },\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={(\n      props //check if user is authenticated, if yes render page, else redirect\n    ) =>\n      !isAuthenticated && !loading ? (\n        <Redirect to='/login' />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps)(PrivateRoute);\n","import { Fragment, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { createProfile } from \"../../actions/profile\";\n\nconst CreateProfile = ({ createProfile, history }) => {\n  const [formData, setFormData] = useState({\n    company: \"\",\n    website: \"\",\n    location: \"\",\n    bio: \"\",\n    status: \"\",\n    githubusername: \"\",\n    skills: \"\",\n    youtube: \"\",\n    facebook: \"\",\n    twitter: \"\",\n    instagram: \"\",\n    linkedin: \"\",\n  });\n\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  const {\n    company,\n    website,\n    location,\n    bio,\n    status,\n    githubusername,\n    skills,\n    youtube,\n    facebook,\n    twitter,\n    instagram,\n    linkedin,\n  } = formData;\n\n  const setFormDataHandler = (e) => {\n    setFormData((prevState) => {\n      return { ...prevState, [e.target.name]: e.target.value };\n    });\n  };\n\n  const toggleSocialInputsHandler = () => {\n    toggleSocialInputs((prevState) => {\n      return !prevState;\n    });\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    createProfile(formData, history);\n  };\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Create Your Profile</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className='form' onSubmit={onSubmit}>\n        <div\n          className='form-group'\n          value={status}\n          onChange={setFormDataHandler}\n        >\n          <select name='status'>\n            <option value='0'>* Select Professional Status</option>\n            <option value='Developer'>Developer</option>\n            <option value='Junior Developer'>Junior Developer</option>\n            <option value='Senior Developer'>Senior Developer</option>\n            <option value='Manager'>Manager</option>\n            <option value='Student or Learning'>Student or Learning</option>\n            <option value='Instructor'>Instructor or Teacher</option>\n            <option value='Intern'>Intern</option>\n            <option value='Other'>Other</option>\n          </select>\n          <small className='form-text'>\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Company'\n            name='company'\n            value={company}\n            onChange={setFormDataHandler}\n          />\n          <small className='form-text'>\n            Could be your own company or one you work for\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Website'\n            name='website'\n            value={website}\n            onChange={setFormDataHandler}\n          />\n          <small className='form-text'>\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={setFormDataHandler}\n          />\n          <small className='form-text'>\n            City & state suggested (eg. Boston, MA)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Skills'\n            name='skills'\n            value={skills}\n            onChange={setFormDataHandler}\n          />\n          <small className='form-text'>\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Github Username'\n            name='githubusername'\n            value={githubusername}\n            onChange={setFormDataHandler}\n          />\n          <small className='form-text'>\n            If you want your latest repos and a Github link, include your\n            username\n          </small>\n        </div>\n        <div className='form-group'>\n          <textarea\n            placeholder='A short bio of yourself'\n            name='bio'\n            value={bio}\n            onChange={setFormDataHandler}\n          ></textarea>\n          <small className='form-text'>Tell us a little about yourself</small>\n        </div>\n\n        <div className='my-2'>\n          <button\n            type='button'\n            className='btn btn-light'\n            onClick={toggleSocialInputsHandler}\n          >\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && (\n          <Fragment>\n            <div className='form-group social-input'>\n              <i className='fab fa-twitter fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Twitter URL'\n                name='twitter'\n                value={twitter}\n                onChange={setFormDataHandler}\n              />\n            </div>\n            <div className='form-group social-input'>\n              <i className='fab fa-facebook fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Facebook URL'\n                name='facebook'\n                value={facebook}\n                onChange={setFormDataHandler}\n              />\n            </div>\n            <div className='form-group social-input'>\n              <i className='fab fa-youtube fa-2x'></i>\n              <input\n                type='text'\n                placeholder='YouTube URL'\n                name='youtube'\n                value={youtube}\n                onChange={setFormDataHandler}\n              />\n            </div>\n            <div className='form-group social-input'>\n              <i className='fab fa-linkedin fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Linkedin URL'\n                name='linkedin'\n                value={linkedin}\n                onChange={setFormDataHandler}\n              />\n            </div>\n            <div className='form-group social-input'>\n              <i className='fab fa-instagram fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Instagram URL'\n                name='instagram'\n                value={instagram}\n                onChange={setFormDataHandler}\n              />\n            </div>\n          </Fragment>\n        )}\n\n        <input type='submit' className='btn btn-primary my-1' />\n        <Link className='btn btn-light my-1' to='/dashboard'>\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nCreateProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n};\n\n// const mapStateToProps = (state) => ({});\n\nexport default connect(null, { createProfile })(withRouter(CreateProfile));\n","import { Fragment, useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { createProfile, getCurrentProfile } from \"../../actions/profile\";\n\nconst initialState = {\n  company: \"\",\n  website: \"\",\n  location: \"\",\n  status: \"\",\n  skills: \"\",\n  githubusername: \"\",\n  bio: \"\",\n  twitter: \"\",\n  facebook: \"\",\n  linkedin: \"\",\n  youtube: \"\",\n  instagram: \"\",\n};\n\nconst EditProfile = ({\n  profile: { profile, loading },\n  createProfile,\n  getCurrentProfile,\n  history,\n}) => {\n  const [formData, setFormData] = useState(initialState);\n\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  useEffect(() => {\n    if (!profile) getCurrentProfile();\n\n    if (!loading && profile) {\n      const profileData = { ...initialState };\n      for (const key in profile) {\n        if (key in profileData) profileData[key] = profile[key];\n      }\n      for (const key in profile.social) {\n        if (key in profileData) profileData[key] = profile.social[key];\n      }\n      // the skills is an array from API response\n      if (Array.isArray(profileData.skills))\n        profileData.skills = profileData.skills.join(\", \");\n\n      // set local state with the profileData\n      setFormData(profileData);\n    }\n  }, [loading, getCurrentProfile, profile]);\n\n  const {\n    company,\n    website,\n    location,\n    bio,\n    status,\n    githubusername,\n    skills,\n    youtube,\n    facebook,\n    twitter,\n    instagram,\n    linkedin,\n  } = formData;\n\n  const setFormDataHandler = (e) => {\n    setFormData((prevState) => {\n      return { ...prevState, [e.target.name]: e.target.value };\n    });\n  };\n\n  const toggleSocialInputsHandler = () => {\n    toggleSocialInputs((prevState) => {\n      return !prevState;\n    });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    createProfile(formData, history, true);\n  };\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Create Your Profile</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i> Let's get some information to make your\n        profile stand out\n      </p>\n      <small>* = required field</small>\n      <form className='form' onSubmit={onSubmit}>\n        <div\n          className='form-group'\n          value={status}\n          onChange={setFormDataHandler}\n        >\n          <select name='status'>\n            <option value='0'>* Select Professional Status</option>\n            <option value='Developer'>Developer</option>\n            <option value='Junior Developer'>Junior Developer</option>\n            <option value='Senior Developer'>Senior Developer</option>\n            <option value='Manager'>Manager</option>\n            <option value='Student or Learning'>Student or Learning</option>\n            <option value='Instructor'>Instructor or Teacher</option>\n            <option value='Intern'>Intern</option>\n            <option value='Other'>Other</option>\n          </select>\n          <small className='form-text'>\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Company'\n            name='company'\n            value={company}\n            onChange={setFormDataHandler}\n          />\n          <small className='form-text'>\n            Could be your own company or one you work for\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Website'\n            name='website'\n            value={website}\n            onChange={setFormDataHandler}\n          />\n          <small className='form-text'>\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={setFormDataHandler}\n          />\n          <small className='form-text'>\n            City & state suggested (eg. Boston, MA)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Skills'\n            name='skills'\n            value={skills}\n            onChange={setFormDataHandler}\n          />\n          <small className='form-text'>\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Github Username'\n            name='githubusername'\n            value={githubusername}\n            onChange={setFormDataHandler}\n          />\n          <small className='form-text'>\n            If you want your latest repos and a Github link, include your\n            username\n          </small>\n        </div>\n        <div className='form-group'>\n          <textarea\n            placeholder='A short bio of yourself'\n            name='bio'\n            value={bio}\n            onChange={setFormDataHandler}\n          ></textarea>\n          <small className='form-text'>Tell us a little about yourself</small>\n        </div>\n\n        <div className='my-2'>\n          <button\n            type='button'\n            className='btn btn-light'\n            onClick={toggleSocialInputsHandler}\n          >\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && (\n          <Fragment>\n            <div className='form-group social-input'>\n              <i className='fab fa-twitter fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Twitter URL'\n                name='twitter'\n                value={twitter}\n                onChange={setFormDataHandler}\n              />\n            </div>\n            <div className='form-group social-input'>\n              <i className='fab fa-facebook fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Facebook URL'\n                name='facebook'\n                value={facebook}\n                onChange={setFormDataHandler}\n              />\n            </div>\n            <div className='form-group social-input'>\n              <i className='fab fa-youtube fa-2x'></i>\n              <input\n                type='text'\n                placeholder='YouTube URL'\n                name='youtube'\n                value={youtube}\n                onChange={setFormDataHandler}\n              />\n            </div>\n            <div className='form-group social-input'>\n              <i className='fab fa-linkedin fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Linkedin URL'\n                name='linkedin'\n                value={linkedin}\n                onChange={setFormDataHandler}\n              />\n            </div>\n            <div className='form-group social-input'>\n              <i className='fab fa-instagram fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Instagram URL'\n                name='instagram'\n                value={instagram}\n                onChange={setFormDataHandler}\n              />\n            </div>\n          </Fragment>\n        )}\n\n        <input type='submit' className='btn btn-primary my-1' />\n        <Link className='btn btn-light my-1' to='/dashboard'>\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nEditProfile.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\n  withRouter(EditProfile)\n);\n","import { Fragment, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { addExperience } from \"../../actions/profile\";\n\nconst AddExperience = ({ addExperience, history }) => {\n  const [formData, setFormData] = useState({\n    company: \"\",\n    title: \"\",\n    location: \"\",\n    from: \"\",\n    to: \"\",\n    current: false,\n    description: \"\",\n  });\n\n  const { company, title, location, from, to, current, description } = formData;\n\n  const setFormDataHandler = (e) => {\n    setFormData((prevState) => {\n      return {\n        ...prevState,\n        [e.target.name]: e.target.value,\n      };\n    });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    addExperience(formData, history);\n  };\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Add An Experience</h1>\n      <p className='lead'>\n        <i className='fas fa-code-branch'></i> Add any developer/programming\n        positions that you have had in the past\n      </p>\n      <small>* = required field</small>\n      <form className='form' onSubmit={onSubmit}>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Job Title'\n            name='title'\n            value={title}\n            onChange={setFormDataHandler}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Company'\n            name='company'\n            value={company}\n            onChange={setFormDataHandler}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={setFormDataHandler}\n          />\n        </div>\n        <div className='form-group'>\n          <h4>From Date</h4>\n          <input\n            type='date'\n            name='from'\n            value={from}\n            onChange={setFormDataHandler}\n          />\n        </div>\n        <div className='form-group'>\n          <p>\n            <input\n              type='checkbox'\n              name='current'\n              value={current}\n              checked={current}\n              onChange={() => {\n                setFormData({ ...formData, current: !current });\n              }}\n            />{\" \"}\n            Current Job\n          </p>\n        </div>\n        <div className='form-group'>\n          <h4>To Date</h4>\n          <input\n            type='date'\n            name='to'\n            value={to}\n            onChange={setFormDataHandler}\n            disabled={current}\n          />\n        </div>\n        <div className='form-group'>\n          <textarea\n            name='description'\n            cols='30'\n            rows='5'\n            placeholder='Job Description'\n            value={description}\n            onChange={setFormDataHandler}\n          ></textarea>\n        </div>\n        <input type='submit' className='btn btn-primary my-1' />\n        <Link className='btn btn-light my-1' to='/dashboard'>\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nAddExperience.propTypes = {\n  addExperience: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addExperience })(withRouter(AddExperience));\n","import { Fragment, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { addEducation } from \"../../actions/profile\";\n\nconst AddEducation = ({ addEducation, history }) => {\n  const [formData, setFormData] = useState({\n    school: \"\",\n    degree: \"\",\n    fieldofstudy: \"\",\n    from: \"\",\n    to: \"\",\n    current: false,\n    description: \"\",\n  });\n\n  const { school, degree, fieldofstudy, from, to, current, description } =\n    formData;\n\n  const setFormDataHandler = (e) => {\n    setFormData((prevState) => {\n      return {\n        ...prevState,\n        [e.target.name]: e.target.value,\n      };\n    });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    addEducation(formData, history);\n  };\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Add Your Education</h1>\n      <p className='lead'>\n        <i className='fas fa-code-branch'></i> Add any school or bootcamp that\n        you have attended\n      </p>\n      <small>* = required field</small>\n      <form className='form' onSubmit={onSubmit}>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* School or Bootcamp'\n            name='school'\n            value={school}\n            onChange={setFormDataHandler}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Degree or Certificate'\n            name='degree'\n            value={degree}\n            onChange={setFormDataHandler}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Field of Study'\n            name='fieldofstudy'\n            value={fieldofstudy}\n            onChange={setFormDataHandler}\n          />\n        </div>\n        <div className='form-group'>\n          <h4>From Date</h4>\n          <input\n            type='date'\n            name='from'\n            value={from}\n            onChange={setFormDataHandler}\n          />\n        </div>\n        <div className='form-group'>\n          <p>\n            <input\n              type='checkbox'\n              name='current'\n              value={current}\n              checked={current}\n              onChange={() => {\n                setFormData({ ...formData, current: !current });\n              }}\n            />{\" \"}\n            Current School\n          </p>\n        </div>\n        <div className='form-group'>\n          <h4>To Date</h4>\n          <input\n            type='date'\n            name='to'\n            value={to}\n            onChange={setFormDataHandler}\n            disabled={current}\n          />\n        </div>\n        <div className='form-group'>\n          <textarea\n            name='description'\n            cols='30'\n            rows='5'\n            placeholder='Program Description'\n            value={description}\n            onChange={setFormDataHandler}\n          ></textarea>\n        </div>\n        <input type='submit' className='btn btn-primary my-1' />\n        <Link className='btn btn-light my-1' to='/dashboard'>\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nAddEducation.propTypes = {\n  addEducation: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addEducation })(withRouter(AddEducation));\n","export default __webpack_public_path__ + \"static/media/spinner.96905eb6.gif\";","import { Fragment } from \"react\";\nimport spinner from \"./spinner.gif\";\n\nconst Spinner = () => {\n  return (\n    <Fragment>\n      <img\n        src={spinner}\n        style={{ width: \"200px\", margin: \"auto\", display: \"block\" }}\n        alt='Loading...'\n      />\n    </Fragment>\n  );\n};\n\nexport default Spinner;\n","import { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\nconst ProfileItem = ({\n  profile: {\n    user: { _id, name, avatar },\n    status,\n    company,\n    location,\n    skills,\n  },\n}) => {\n  return (\n    <div className='profile bg-light'>\n      <img src={avatar} alt='' className='round-img' />\n      <div>\n        <h2>{name}</h2>\n        <p>\n          {status} {company && <span> at {company}</span>}\n        </p>\n        <p className='my-1'>{location && <span>{location}</span>}</p>\n        <Link to={`/profile/${_id}`} className='btn btn-primary'>\n          View Profile\n        </Link>\n      </div>\n      <ul>\n        {skills.slice(0, 4).map((skill, index) => (\n          <li key={index} className='text-primary'>\n            <i className='fas fa-check' /> {skill}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nProfileItem.propTypes = {\n  profile: PropTypes.object.isRequired,\n};\n\nexport default ProfileItem;\n","import { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport ProfileItem from \"./ProfileItem\";\nimport { getProfiles } from \"../../actions/profile\";\n\nconst Profiles = ({ getProfiles, profile: { profiles, loading } }) => {\n  useEffect(() => {\n    getProfiles();\n  }, [getProfiles]);\n\n  return (\n    <section className='container'>\n      {loading ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <h1 className='large text-primary'>Developers</h1>\n          <p className='lead'>\n            <i className='fab fa-connectdevelop' /> Browse and connect with\n            developers\n          </p>\n          <div className='profiles'>\n            {profiles.length > 0 ? (\n              profiles.map((profile) => (\n                <ProfileItem key={profile._id} profile={profile} />\n              ))\n            ) : (\n              <h4>No profiles found...</h4>\n            )}\n          </div>\n        </Fragment>\n      )}\n    </section>\n  );\n};\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { getProfiles })(Profiles);\n","import PropTypes from \"prop-types\";\n\nconst ProfileTop = ({\n  profile: {\n    status,\n    company,\n    location,\n    website,\n    social,\n    user: { name, avatar },\n  },\n}) => {\n  return (\n    <div className='profile-top bg-primary p-2'>\n      <img className='round-img my-1' src={avatar} alt='' />\n      <h1 className='large'>{name}</h1>\n      <p className='lead'>\n        {status} {company ? <span> at {company}</span> : null}\n      </p>\n      <p>{location ? <span>{location}</span> : null}</p>\n      <div className='icons my-1'>\n        {website ? (\n          <a href={website} target='_blank' rel='noopener noreferrer'>\n            <i className='fas fa-globe fa-2x' />\n          </a>\n        ) : null}\n        {social\n          ? Object.entries(social)\n              .filter(([_, value]) => value) //_ is a wildcard, to take which social name entries provides\n              .map(([key, value]) => (\n                <a\n                  key={key}\n                  href={value}\n                  target='_blank'\n                  rel='noopener noreferrer'\n                >\n                  <i className={`fab fa-${key} fa-2x`}></i>\n                </a>\n              ))\n          : null}\n      </div>\n    </div>\n  );\n};\n\nProfileTop.propTypes = {\n  profile: PropTypes.object.isRequired,\n};\n\nexport default ProfileTop;\n","import { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ProfileAbout = ({\n  profile: {\n    bio,\n    skills,\n    user: { name },\n  },\n}) => (\n  <div className='profile-about bg-light p-2'>\n    {bio && (\n      <Fragment>\n        <h2 className='text-primary'>{name}'s Bio</h2>\n        <p>{bio}</p>\n        <div className='line' />\n      </Fragment>\n    )}\n    <h2 className='text-primary'>Skill Set</h2>\n    <div className='skills'>\n      {skills.map((skill, index) => (\n        <div key={index} className='p-1'>\n          <i className='fas fa-check' /> {skill}\n        </div>\n      ))}\n    </div>\n  </div>\n);\n\nProfileAbout.propTypes = {\n  profile: PropTypes.object.isRequired,\n};\n\nexport default ProfileAbout;\n","import PropTypes from \"prop-types\";\nimport formatDate from \"../../utils/formatDate\";\n\nconst ProfileExperience = ({\n  experience: { company, title, location, current, to, from, description },\n}) => (\n  <div>\n    <h3 className='text-dark'>{company}</h3>\n    <p>\n      {formatDate(from)} - {to ? formatDate(to) : \"Now\"}\n    </p>\n    <p>\n      <strong>Position: </strong> {title}\n    </p>\n    <p>\n      <strong>Location: </strong> {location}\n    </p>\n    <p>\n      <strong>Description: </strong> {description}\n    </p>\n  </div>\n);\n\nProfileExperience.propTypes = {\n  experience: PropTypes.object.isRequired,\n};\n\nexport default ProfileExperience;\n","import PropTypes from \"prop-types\";\nimport formatDate from \"../../utils/formatDate\";\n\nconst ProfileEducation = ({\n  education: { school, degree, fieldofstudy, current, to, from, description },\n}) => (\n  <div>\n    <h3 className='text-dark'>{school}</h3>\n    <p>\n      {formatDate(from)} - {to ? formatDate(to) : \"Now\"}\n    </p>\n    <p>\n      <strong>Degree: </strong> {degree}\n    </p>\n    <p>\n      <strong>Field Of Study: </strong> {fieldofstudy}\n    </p>\n    <p>\n      <strong>Description: </strong> {description}\n    </p>\n  </div>\n);\n\nProfileEducation.propTypes = {\n  education: PropTypes.object.isRequired,\n};\n\nexport default ProfileEducation;\n","import { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getGithubRepos } from \"../../actions/profile\";\n\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\n  useEffect(() => {\n    console.log(username);\n    getGithubRepos(username);\n  }, [getGithubRepos, username]);\n\n  return (\n    <div className='profile-github'>\n      <h2 className='text-primary my-1'>Github Repos</h2>\n      {repos.map((repo) => (\n        <div key={repo.id} className='repo bg-white p-1 my-1'>\n          <div>\n            <h4>\n              <a href={repo.html_url} target='_blank' rel='noopener noreferrer'>\n                {repo.name}\n              </a>\n            </h4>\n            <p>{repo.description}</p>\n          </div>\n          <div>\n            <ul>\n              <li className='badge badge-primary'>\n                Stars: {repo.stargazers_count}\n              </li>\n              <li className='badge badge-dark'>\n                Watchers: {repo.watchers_count}\n              </li>\n              <li className='badge badge-light'>Forks: {repo.forks_count}</li>\n            </ul>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  repos: state.profile.repos,\n});\n\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\n","import { Fragment, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport ProfileTop from \"./ProfileTop\";\nimport ProfileAbout from \"./ProfileAbout\";\nimport ProfileExperience from \"./ProfileExperience\";\nimport ProfileEducation from \"./ProfileEducation\";\nimport ProfileGithub from \"./ProfileGithub\";\nimport { getProfileById } from \"../../actions/profile\";\n\nconst Profile = ({ getProfileById, profile: { profile }, auth }) => {\n  const { id } = useParams();\n\n  useEffect(() => {\n    getProfileById(id);\n  }, [getProfileById, id]);\n\n  return (\n    <section className='container'>\n      {profile === null ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <Link to='/profiles' className='btn btn-light'>\n            Back To Profiles\n          </Link>\n          {auth.isAuthenticated &&\n            auth.loading === false &&\n            auth.user._id === profile.user._id && (\n              <Link to='/edit-profile' className='btn btn-dark'>\n                Edit Profile\n              </Link>\n            )}\n          <div class='profile-grid my-1'>\n            <ProfileTop profile={profile} />\n            <ProfileAbout profile={profile} />\n            <div className='profile-exp bg-white p-2'>\n              <h2 className='text-primary'>Experience</h2>\n              {profile.experience.length > 0 ? (\n                <Fragment>\n                  {profile.experience.map((experience) => (\n                    <ProfileExperience\n                      key={experience._id}\n                      experience={experience}\n                    />\n                  ))}\n                </Fragment>\n              ) : (\n                <h4>No experience credentials</h4>\n              )}\n            </div>\n\n            <div className='profile-edu bg-white p-2'>\n              <h2 className='text-primary'>Education</h2>\n              {profile.education.length > 0 ? (\n                <Fragment>\n                  {profile.education.map((education) => (\n                    <ProfileEducation\n                      key={education._id}\n                      education={education}\n                    />\n                  ))}\n                </Fragment>\n              ) : (\n                <h4>No education credentials</h4>\n              )}\n            </div>\n\n            {profile.githubusername && (\n              <ProfileGithub username={profile.githubusername} />\n            )}\n          </div>\n        </Fragment>\n      )}\n    </section>\n  );\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { getProfileById })(Profile);\n","import { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport formatDate from \"../../utils/formatDate\";\nimport { connect } from \"react-redux\";\nimport { addLike, removeLike, deletePost } from \"../../actions/post\";\n\nconst PostItem = ({\n  addLike,\n  removeLike,\n  deletePost,\n  auth,\n  post: { _id, text, name, avatar, user, likes, comments, date },\n  showActions,\n}) => (\n  <div className='post bg-white p-1 my-1'>\n    <div>\n      <Link to={`/profile/${user}`}>\n        <img className='round-img' src={avatar} alt='' />\n        <h4>{name}</h4>\n      </Link>\n    </div>\n    <div>\n      <p className='my-1'>{text}</p>\n      <p className='post-date'>Posted on {formatDate(date)}</p>\n\n      {showActions && (\n        <Fragment>\n          <button\n            onClick={() => addLike(_id)}\n            type='button'\n            className='btn btn-light'\n          >\n            <i className='fas fa-thumbs-up' />{\" \"}\n            <span>{likes.length > 0 && <span>{likes.length}</span>}</span>\n          </button>\n          <button\n            onClick={() => removeLike(_id)}\n            type='button'\n            className='btn btn-light'\n          >\n            <i className='fas fa-thumbs-down' />\n          </button>\n          <Link to={`/posts/${_id}`} className='btn btn-primary'>\n            Discussion{\" \"}\n            {comments.length > 0 && (\n              <span className='comment-count'>{comments.length}</span>\n            )}\n          </Link>\n          {!auth.loading && user === auth.user._id && (\n            <button\n              onClick={() => deletePost(_id)}\n              type='button'\n              className='btn btn-danger'\n            >\n              <i className='fas fa-times' />\n            </button>\n          )}\n        </Fragment>\n      )}\n    </div>\n  </div>\n);\n\nPostItem.defaultProps = {\n  showActions: true,\n};\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n  showActions: PropTypes.bool,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\n  PostItem\n);\n","import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport {\n  GET_POSTS,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_POST,\n  GET_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT,\n} from \"./types\";\n\n// Get posts\nexport const getPosts = () => async (dispatch) => {\n  try {\n    const res = await axios.get(\"/api/posts\");\n\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add like, take note id is post id\nexport const addLike = (id) => async (dispatch) => {\n  try {\n    const res = await axios.put(`/api/posts/like/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { id, likes: res.data },\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Remove like, take note id is post id\nexport const removeLike = (id) => async (dispatch) => {\n  try {\n    const res = await axios.put(`/api/posts/unlike/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { id, likes: res.data },\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Delete post\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await axios.delete(`/api/posts/${id}`);\n\n    dispatch({\n      type: DELETE_POST,\n      payload: id,\n    });\n\n    dispatch(setAlert(\"Post Removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add post\nexport const addPost = (formData) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  try {\n    const res = await axios.post(\"/api/posts\", formData, config);\n\n    dispatch({\n      type: ADD_POST,\n      payload: res.data,\n    });\n\n    dispatch(setAlert(\"Post Created\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Get post\nexport const getPost = (id) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/posts/${id}`);\n\n    dispatch({\n      type: GET_POST,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Add comment\nexport const addComment = (postId, formData) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  try {\n    const res = await axios.post(\n      `/api/posts/comment/${postId}`,\n      formData,\n      config\n    );\n\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data,\n    });\n\n    dispatch(setAlert(\"Comment Added\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Delete comment\nexport const deleteComment = (postId, commentId) => async (dispatch) => {\n  try {\n    await axios.delete(`/api/posts/comment/${postId}/${commentId}`);\n\n    dispatch({\n      type: REMOVE_COMMENT,\n      payload: commentId,\n    });\n\n    dispatch(setAlert(\"Comment Removed\", \"success\"));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addPost } from \"../../actions/post\";\n\nconst PostForm = ({ addPost }) => {\n  const [text, setText] = useState(\"\");\n\n  const setTextHandler = (e) => {\n    setText(e.target.value);\n  };\n\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    addPost({ text });\n    setText(\"\");\n  };\n\n  return (\n    <div className='post-form'>\n      <div className='bg-primary p'>\n        <h3>Say Something...</h3>\n      </div>\n      <form className='form my-1' onSubmit={onSubmitHandler}>\n        <textarea\n          name='text'\n          cols='30'\n          rows='5'\n          placeholder='Create a post'\n          value={text}\n          onChange={setTextHandler}\n          required\n        />\n        <input type='submit' className='btn btn-dark my-1' value='Submit' />\n      </form>\n    </div>\n  );\n};\n\nPostForm.propTypes = {\n  addPost: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addPost })(PostForm);\n","import { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport PostItem from \"./PostItem\";\nimport PostForm from \"./PostForm\";\nimport { getPosts } from \"../../actions/post\";\n\nconst Posts = ({ getPosts, post: { posts } }) => {\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  return (\n    <section className='container'>\n      <h1 className='large text-primary'>Posts</h1>\n      <p className='lead'>\n        <i className='fas fa-user' /> Welcome to the community\n      </p>\n      <PostForm />\n      <div className='posts'>\n        {posts.map((post) => (\n          <PostItem key={post._id} post={post} />\n        ))}\n      </div>\n    </section>\n  );\n};\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  post: state.post,\n});\n\nexport default connect(mapStateToProps, { getPosts })(Posts);\n","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addComment } from \"../../actions/post\";\n\nconst CommentForm = ({ postId, addComment }) => {\n  const [text, setText] = useState(\"\");\n\n  const setTextHandler = (e) => {\n    setText(e.target.value);\n  };\n  const onSubmitHander = (e) => {\n    e.preventDefault();\n    addComment(postId, { text });\n    setText(\"\");\n  };\n\n  return (\n    <div className='post-form'>\n      <div className='bg-primary p'>\n        <h3>Leave a Comment</h3>\n      </div>\n      <form className='form my-1' onSubmit={onSubmitHander}>\n        <textarea\n          name='text'\n          cols='30'\n          rows='5'\n          placeholder='Comment the post'\n          value={text}\n          onChange={setTextHandler}\n          required\n        />\n        <input type='submit' className='btn btn-dark my-1' value='Submit' />\n      </form>\n    </div>\n  );\n};\n\nCommentForm.propTypes = {\n  addComment: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addComment })(CommentForm);\n","import { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport formatDate from \"../../utils/formatDate\";\nimport { deleteComment } from \"../../actions/post\";\n\nconst CommentItem = ({\n  postId,\n  comment: { _id, text, name, avatar, user, date },\n  auth,\n  deleteComment,\n}) => (\n  <div className='post bg-white p-1 my-1'>\n    <div>\n      <Link to={`/profile/${user}`}>\n        <img className='round-img' src={avatar} alt='' />\n        <h4>{name}</h4>\n      </Link>\n    </div>\n    <div>\n      <p className='my-1'>{text}</p>\n      <p className='post-date'>Posted on {formatDate(date)}</p>\n      {!auth.loading && user === auth.user._id && (\n        <button\n          onClick={() => deleteComment(postId, _id)}\n          type='button'\n          className='btn btn-danger'\n        >\n          <i className='fas fa-times' />\n        </button>\n      )}\n    </div>\n  </div>\n);\n\nCommentItem.propTypes = {\n  postId: PropTypes.string.isRequired,\n  comment: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  deleteComment: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);\n","import { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"../layout/Spinner\";\nimport PostItem from \"../posts/PostItem\";\nimport CommentForm from \"../post/CommentForm\";\nimport CommentItem from \"../post/CommentItem\";\nimport { getPost } from \"../../actions/post\";\n\nconst Post = ({ getPost, post: { post, loading } }) => {\n  const { id } = useParams();\n  useEffect(() => {\n    getPost(id);\n  }, [getPost, id]);\n\n  return loading || post === null ? (\n    <Spinner />\n  ) : (\n    <section className='container'>\n      <Link to='/posts' className='btn'>\n        Back To Posts\n      </Link>\n      <PostItem post={post} showActions={false} />\n      <CommentForm postId={post._id} />\n      <div className='comments'>\n        {post.comments.map((comment) => (\n          <CommentItem key={comment._id} comment={comment} postId={post._id} />\n        ))}\n      </div>\n    </section>\n  );\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  post: state.post,\n});\n\nexport default connect(mapStateToProps, { getPost })(Post);\n","import { SET_ALERT, REMOVE_ALERT } from \"../actions/types\";\n\nconst initialState = [];\n\nfunction alertReducer(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_ALERT:\n      return [...state, payload];\n    case REMOVE_ALERT:\n      return state.filter((alert) => alert.id !== payload);\n    default:\n      return state;\n  }\n}\n\nexport default alertReducer;\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  ACCOUNT_DELETED,\n} from \"../actions/types\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: null,\n  loading: true, //check if backend have finish loading\n  user: null,\n};\n\nfunction authReducer(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload,\n      };\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem(\"token\", payload.token);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case REGISTER_FAIL:\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT:\n    case ACCOUNT_DELETED:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default authReducer;\n","import {\n  GET_PROFILE,\n  GET_PROFILES,\n  GET_REPOS,\n  UPDATE_PROFILE,\n  PROFILE_ERROR,\n  CLEAR_PROFILE,\n} from \"../actions/types\";\n\nconst initialState = {\n  profile: null, //either your own profile or other user profile\n  profiles: [], //list of developer\n  repos: [],\n  loading: true,\n  error: {},\n};\n\nfunction profileReducer(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_PROFILE:\n    case UPDATE_PROFILE:\n      return {\n        ...state,\n        profile: payload,\n        loading: false,\n      };\n    case GET_PROFILES:\n      return {\n        ...state,\n        profiles: payload,\n        loading: false,\n      };\n    case PROFILE_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n        profile: null,\n      };\n    case CLEAR_PROFILE:\n      return {\n        ...state,\n        profile: null,\n        repos: [],\n        loading: false,\n      };\n    case GET_REPOS:\n      return {\n        ...state,\n        repos: payload,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default profileReducer;\n","import {\n  GET_POSTS,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_POST,\n  GET_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT,\n} from \"../actions/types\";\n\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {},\n};\n\nfunction postReducer(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: payload,\n        loading: false,\n      };\n    case GET_POST:\n      return {\n        ...state,\n        post: payload,\n        loading: false,\n      };\n    case ADD_POST:\n      return {\n        ...state,\n        posts: [payload, ...state.posts],\n        loading: false,\n      };\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter((post) => post._id !== payload),\n        loading: false,\n      };\n    case POST_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n      };\n    case UPDATE_LIKES:\n      return {\n        ...state,\n        posts: state.posts.map((post) =>\n          post._id === payload.id ? { ...post, likes: payload.likes } : post\n        ),\n        loading: false,\n      };\n    case ADD_COMMENT:\n      return {\n        ...state,\n        post: { ...state.post, comments: payload },\n        loading: false,\n      };\n    case REMOVE_COMMENT:\n      return {\n        ...state,\n        post: {\n          ...state.post,\n          comments: state.post.comments.filter(\n            //filter all comments except delete comment id\n            (comment) => comment._id !== payload\n          ),\n        },\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n\nexport default postReducer;\n","import { combineReducers } from \"redux\";\nimport alert from \"./alert\";\nimport auth from \"./auth\";\nimport profile from \"./profile\";\nimport post from \"./post\";\n\nexport default combineReducers({\n  alert,\n  auth,\n  profile,\n  post,\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import { Fragment, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Landing from \"./components/layout/Landing\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport Alert from \"./components/layout/Alert\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport PrivateRoute from \"./components/routing/PrivateRoute\";\nimport CreateProfile from \"./components/profile-forms/CreateProfile\";\nimport EditProfile from \"./components/profile-forms/EditProfile\";\nimport AddExperience from \"./components/profile-forms/AddExperience\";\nimport AddEducation from \"./components/profile-forms/AddEducation\";\nimport Profiles from \"./components/profiles/Profiles\";\nimport Profile from \"./components/profile/Profile\";\nimport Posts from \"./components/posts/Posts\";\nimport Post from \"./components/post/Post\";\n\n//Redux\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { loadUser } from \"./actions/auth\";\nimport setAuthToken from \"./utils/setAuthToken\";\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser());\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Navbar />\n          <Route path='/' component={Landing} exact />\n          <section className='container'>\n            <Alert />\n            <Switch>\n              <Route path='/register' component={Register} exact />\n              <Route path='/login' component={Login} exact />\n              <Route path='/profiles' component={Profiles} exact />\n              <Route path='/profile/:id' component={Profile} exact />\n              <PrivateRoute path='/dashboard' component={Dashboard} exact />\n              <PrivateRoute\n                path='/create-profile'\n                component={CreateProfile}\n                exact\n              />\n              <PrivateRoute\n                path='/edit-profile'\n                component={EditProfile}\n                exact\n              />\n              <PrivateRoute\n                path='/add-experience'\n                component={AddExperience}\n                exact\n              />\n              <PrivateRoute\n                path='/add-education'\n                component={AddEducation}\n                exact\n              />\n              <PrivateRoute path='/posts' component={Posts} exact />\n              <PrivateRoute path='/posts/:id' component={Post} exact />\n            </Switch>\n          </section>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}